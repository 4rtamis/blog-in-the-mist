---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import ArrowCard from "@components/ArrowCard.astro";
import { BLOG } from "@consts";

const data = (await getCollection("episodes"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

type Acc = {
  [series: string]: CollectionEntry<"episodes">[];
};

const posts = data.reduce((acc: Acc, post) => {
  const series = post.data.series;

  if (!acc[series]) {
    acc[series] = [];
  }
  acc[series].push(post);
  return acc;
}, {});

const series_list = Object.keys(posts).sort(
  (a, b) => parseInt(b) - parseInt(a),
);
---

<Layout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>
  <Container>
    <aside data-pagefind-ignore>
      <div class="space-y-10">
        <div class="space-y-4">
          {
            series_list.map((series) => (
              <section class="animate space-y-4">
                <div class="font-heading text-3xl font-black text-black uppercase">
                  {series}
                </div>
                <div>
                  <ul class="not-prose flex flex-col gap-4">
                    {posts[series].map((post) => (
                      <li>
                        <ArrowCard entry={post} />
                      </li>
                    ))}
                  </ul>
                </div>
              </section>
            ))
          }
        </div>
      </div>
    </aside>
  </Container>
</Layout>
